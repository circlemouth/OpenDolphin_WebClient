services:
  db:
    image: postgres:14
    container_name: opendolphin-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-opendolphin}
      POSTGRES_USER: ${POSTGRES_USER:-opendolphin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-opendolphin}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-md5}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS:---auth-host=md5 --auth-local=trust}
      TZ: Asia/Tokyo
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    container_name: opendolphin-server
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-opendolphin}
      DB_USER: ${POSTGRES_USER:-opendolphin}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-opendolphin}
      TZ: Asia/Tokyo
    ports:
      - "${APP_HTTP_PORT:-8080}:8080"
      - "${APP_ADMIN_PORT:-9990}:9990"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:8080/opendolphin-server/resources/serverinfo || exit 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres-data:
